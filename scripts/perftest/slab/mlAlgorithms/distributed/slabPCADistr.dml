#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

source("../../slabUtils.dml") as utils

dataPath = $1
X = read(dataPath, format="csv")
rvect = rand(rows=nrow(X), cols=1, pdf='uniform')
y = rvect > 0.80
p = sum( X )
q = sum( y )
print(p)
print(q)

for(ix in 1:5){
    tmp = pca(X, 5)
    utils::printRandElements(tmp, 10)
}

pca = function(matrix[double] X, Integer k)
    return (matrix[double] PRJ) {
    N = nrow(X)
    K = ncol(X)
    XS = X - colMeans(X)
    S = (1/(N-1)) * (t(XS) %*% XS)
    [eigvals, eigvects] = eigen(S)

    # Thanks to the Sysml implementation for this helpful bit
    # of code to sort the eigenvectors
    eigssorted = order(target=eigvals, by=1,
                       decreasing=TRUE,
                       index.return=TRUE)
    diagmat = table(seq(1, K), eigssorted)
    eigvals = diagmat %*% eigvals
    eigvects = eigvects %*% diagmat
    eigvects = eigvects[, 1:k]

    PRJ = XS %*% eigvects
}
